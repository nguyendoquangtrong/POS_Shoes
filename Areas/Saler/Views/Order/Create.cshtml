@using POS_Shoes.Models.ViewModels
@using POS_Shoes.Models;
@using System.Globalization

@model CreateOrderViewModel
@{
    ViewData["Title"] = "Tạo đơn hàng";
    Layout = "~/Areas/Saler/Views/Shared/_Layout.cshtml";

    // ✅ Lấy dữ liệu từ ViewBag
    var products = ViewBag.Products as List<Product>;
    var promotionDetails = ViewBag.PromotionDetails as List<PromotionDetails>;
    var promotions = ViewBag.Promotions as List<Promotion>;


}

<div class="row pos-container">
    <!-- Left Panel - Products -->
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5><i class="fas fa-boxes"></i> Sản phẩm</h5>
                <div class="row mt-2">
                    <div class="col-md-6">
                        <input type="text" id="barcodeInput" class="form-control barcode-input"
                            placeholder="Quét mã vạch hoặc nhập mã..." autofocus>
                    </div>
                    <div class="col-md-6">
                        <input type="text" id="searchProduct" class="form-control" placeholder="Tìm kiếm sản phẩm...">
                    </div>
                </div>
            </div>
            <div class="card-body">
                <!-- ✅ Sử dụng products từ ViewBag -->
                <div class="row" id="productList">
                    @if (products != null)
                    {
                        @foreach (var product in products)
                        {

                            // ✅ Tìm promotion cho sản phẩm hiện tại thông qua PromotionDetails
                            var productPromotion = promotionDetails?.FirstOrDefault(pd => pd.ProductID == product.ProductID);
                            var promotion = productPromotion?.Promotion;
                            var discount = promotion?.discount ?? 0;
                            var promotionId = promotion?.PromotionID ?? Guid.Empty;


                            <div class="col-md-3 mb-3 product-item" data-name="@product.ProductName.ToLower()">
                                <div class="card product-card"
                                    onclick="selectProduct('@product.ProductID', '@product.ProductName', '@product.Price', '@discount', '@promotionId')">
                                    <div class="card-body text-center">
                                        @if (!string.IsNullOrEmpty(product.Image))
                                        {
                                            <img src="@product.Image" class="img-fluid mb-2"
                                                style="height: 100px; object-fit: cover;">
                                        }
                                        else
                                        {
                                            <div class="bg-light p-3 mb-2" style="height: 100px;">
                                                <i class="fas fa-image fa-3x text-muted"></i>
                                            </div>
                                        }
                                        <h6 class="card-title">@product.ProductName</h6>
                                        <p class="card-text">
                                            @if (promotion != null && discount > 0)
                                            {
                                                var discountedPrice = product.Price * (1 - discount / 100);
                                                <strong class="text-danger">@discountedPrice.ToString("N0") VND</strong>

                                                <br>
                                                <small class="text-muted"><del>@product.Price.ToString("N0") VND</del></small>

                                                <br>
                                                <small class="text-success">-@discount% OFF</small>

                                                <br>
                                            }
                                            else
                                            {
                                                <strong>@product.Price.ToString("N0") VND</strong>

                                                <br>
                                            }
                                            <small class="text-muted">Còn: @product.Quantity</small>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Right Panel - Cart -->
    <div class="col-md-4">
        <form id="orderForm" asp-action="Create" method="post">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-shopping-cart"></i> Giỏ hàng</h5>
                </div>
                <div class="card-body">
                    <!-- Customer Selection -->
                    <div class="mb-3">
                        <label class="form-label">Khách hàng</label>

                        <!-- Phone Search Input -->
                        <div class="input-group mb-2">
                            <input type="text" id="phoneSearchInput" class="form-control"
                                placeholder="Nhập số điện thoại để tìm kiếm..." maxlength="15">
                            <button type="button" class="btn btn-outline-primary" id="searchPhoneBtn">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>

                        <!-- Customer Selection Dropdown -->
                        <div class="input-group">
                            <select asp-for="CustomerID" class="form-select" id="customerSelect">
                                <option value="">Khách lẻ</option>
                                @foreach (var customer in (List<Customer>)ViewBag.Customers)
                                {
                                    <option value="@customer.CustomerID">@customer.Name - @customer.Phone</option>
                                }
                            </select>
                            <button type="button" class="btn btn-outline-secondary" data-bs-toggle="modal"
                                data-bs-target="#addCustomerModal">
                                <i class="fas fa-plus"></i>
                            </button>
                        </div>

                        <!-- Search Result Display -->
                        <div id="searchResult" class="mt-2" style="display: none;">
                            <div class="alert alert-info">
                                <i class="fas fa-user"></i>
                                <strong id="foundCustomerName"></strong> - <span id="foundCustomerPhone"></span>
                                <button type="button" class="btn btn-sm btn-success float-end" id="selectFoundCustomer">
                                    Chọn khách hàng này
                                </button>
                            </div>
                        </div>

                        <!-- Search Status -->
                        <div id="searchStatus" class="mt-2"></div>
                    </div>

                    <!-- Cart Items -->
                    <div id="cartItems" style="max-height: 300px; overflow-y: auto;">
                        <!-- Cart items will be added here dynamically -->
                    </div>

                    <hr>

                    <!-- Totals -->
                    <div class="row mb-2">
                        <div class="col-6"><strong>Tổng tiền gốc:</strong></div>
                        <div class="col-6 text-end">
                            <span id="originalTotalAmount">0 VND</span>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-6"><strong>Tiết kiệm:</strong></div>
                        <div class="col-6 text-end">
                            <span id="totalDiscount" class="text-success">0 VND</span>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-6"><strong>Tổng thanh toán:</strong></div>
                        <div class="col-6 text-end">
                            <strong id="totalAmount" class="text-danger">0 VND</strong>
                            <input type="hidden" asp-for="TotalAmount" id="totalAmountInput">
                        </div>
                    </div>

                    <!-- Payment -->
                    <div class="mb-3">
                        <label asp-for="CustomerPaid" class="form-label">Tiền khách đưa</label>
                        <input asp-for="CustomerPaid" class="form-control" id="customerPaidInput" type="number"
                            step="1000">
                        <span asp-validation-for="CustomerPaid" class="text-danger"></span>
                    </div>

                    <!-- Quick Payment Buttons -->
                    <div class="mb-3">
                        <small class="text-muted">Thanh toán nhanh:</small><br>
                        <div class="btn-group btn-group-sm" role="group">
                            <button type="button" class="btn btn-outline-primary" onclick="quickPay(0)">Đúng
                                tiền</button>
                            <button type="button" class="btn btn-outline-primary"
                                onclick="quickPay(50000)">+50K</button>
                            <button type="button" class="btn btn-outline-primary"
                                onclick="quickPay(100000)">+100K</button>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-6"><strong>Tiền thừa:</strong></div>
                        <div class="col-6 text-end">
                            <strong id="changeAmount">0 VND</strong>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-success btn-lg" id="submitOrder" disabled>
                            <i class="fas fa-check"></i> Thanh toán
                        </button>
                        <button type="button" class="btn btn-warning" onclick="clearCart()">
                            <i class="fas fa-trash"></i> Xóa giỏ hàng
                        </button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Add Customer Modal -->
<div class="modal fade" id="addCustomerModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Thêm khách hàng mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addCustomerForm">
                    <div class="mb-3">
                        <label class="form-label">Tên khách hàng</label>
                        <input type="text" class="form-control" id="customerName" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Số điện thoại</label>
                        <input type="tel" class="form-control" id="customerPhone" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" id="customerEmail">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="addCustomer()">Thêm khách hàng</button>
            </div>
        </div>
    </div>
</div>

<!-- Product Selection Modal -->
<div class="modal fade" id="productModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header border-0">
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <!-- Product Image -->
                    <div class="col-md-6">
                        <div class="product-image-container">
                            <img id="modalProductImage" src="" alt="Product Image" class="img-fluid rounded">
                        </div>
                    </div>

                    <!-- Product Details -->
                    <div class="col-md-6">
                        <h4 id="modalProductName" class="mb-3"></h4>

                        <!-- Brand -->
                        <div class="mb-3">
                            <label class="form-label">Brand:</label>
                            <span id="modalProductBrand" class="ms-2"></span>
                        </div>

                        <!-- Size Selection -->
                        <div class="mb-3">
                            <label class="form-label">Size:</label>
                            <select id="modalSizeSelect" class="form-select">
                                <!-- Options will be populated by JavaScript -->
                            </select>
                        </div>

                        <!-- Stock -->
                        <div class="mb-3">
                            <label class="form-label">Stock:</label>
                            <span id="modalStock" class="ms-2 fw-bold"></span>
                        </div>

                        <!-- Price with Discount -->
                        <div class="mb-3">
                            <label class="form-label">Price:</label>
                            <div id="modalPriceContainer" class="ms-2">
                                <span id="modalPrice" class="fw-bold fs-5 text-success"></span>
                                <span id="modalOriginalPrice" class="text-muted text-decoration-line-through ms-2"
                                    style="display: none;"></span>
                                <span id="modalDiscountBadge" class="badge bg-danger ms-2"
                                    style="display: none;"></span>
                            </div>
                        </div>

                        <!-- Quantity -->
                        <div class="mb-4">
                            <label class="form-label">Quantity:</label>
                            <div class="input-group" style="width: 150px;">
                                <button type="button" class="btn btn-outline-secondary"
                                    onclick="changeQuantity(-1)">-</button>
                                <input type="number" id="modalQuantityInput" class="form-control text-center" value="1"
                                    min="1">
                                <button type="button" class="btn btn-outline-secondary"
                                    onclick="changeQuantity(1)">+</button>
                            </div>
                        </div>

                        <!-- Note -->
                        <div class="mb-4">
                            <label class="form-label">Note:</label>
                            <textarea id="modalNote" class="form-control" rows="3"
                                placeholder="enter note..."></textarea>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-flex gap-2">
                            <button type="button" class="btn btn-secondary flex-fill"
                                data-bs-dismiss="modal">CANCEL</button>
                            <button type="button" class="btn btn-primary flex-fill"
                                onclick="addToCartFromModal()">ADD</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        let cart = [];
        let selectedProduct = null;
        let productSizes = [];
        let currentSelectedSize = null;
        let foundCustomer = null;

        // === Tìm kiếm khách hàng theo số điện thoại ===
        $('#searchPhoneBtn').on('click', searchCustomerByPhone);
        $('#phoneSearchInput').on('keypress', function (e) {
            if (e.which === 13) searchCustomerByPhone();
        });
        $('#phoneSearchInput').on('input', function () {
            $('#searchResult').hide();
            $('#searchStatus').empty();
            foundCustomer = null;
        });

        function searchCustomerByPhone() {
            const phone = $('#phoneSearchInput').val().trim();
            if (phone.length < 7) {
                $('#searchStatus').html('<span class="text-danger">Nhập số điện thoại hợp lệ.</span>');
                $('#searchResult').hide();
                return;
            }
            $('#searchStatus').html('<span class="text-info">Đang tìm kiếm...</span>');
            $.get('/Saler/Order/FindCustomerByPhone', { phone })
                .done(function (res) {
                    $('#foundCustomerName').text(res.name);
                    $('#foundCustomerPhone').text(res.phone);
                    $('#searchResult').show();
                    $('#searchStatus').empty();
                    foundCustomer = res;
                })
                .fail(function (xhr) {
                    let msg = "Không tìm thấy khách hàng";
                    if (xhr.responseJSON && xhr.responseJSON !== "")
                        msg = xhr.responseJSON;
                    else if (xhr.responseText)
                        msg = xhr.responseText;
                    $('#searchStatus').html(`<span class="text-danger">${msg}</span>`);
                    $('#searchResult').hide();
                    foundCustomer = null;
                });
        }

        $('#selectFoundCustomer').on('click', function () {
            if (foundCustomer) {
                $('#customerSelect').val(foundCustomer.customerID);
                $('#searchResult').hide();
                $('#searchStatus').html('<span class="text-success">Đã chọn khách hàng!</span>');
            }
        });


        // === QUICK PAY, cập nhật tiền thừa ===
        function quickPay(amount) {
            let total = parseInt($('#totalAmountInput').val()) || 0;
            if (amount === 0) {
                $('#customerPaidInput').val(total);
            } else {
                let currentPaid = parseInt($('#customerPaidInput').val()) || 0;
                $('#customerPaidInput').val(currentPaid + amount);
            }
            updateChangeAmount();
        }

        $('#customerPaidInput').on('input', function () {
            updateChangeAmount();
        });

        function updateChangeAmount() {
            let paid = parseInt($('#customerPaidInput').val()) || 0;
            let total = parseInt($('#totalAmountInput').val()) || 0;
            let change = paid - total;
            $('#changeAmount').text((change > 0 ? change.toLocaleString() : 0) + ' VND');
        }


        // === PRODUCTS DATA ===
        const productsData = @Html.Raw(Json.Serialize(ViewBag.ProductsForJs));

        function calculateDiscountedPrice(originalPrice, discountPercent) {
            if (discountPercent > 0) {
                return originalPrice * (1 - discountPercent / 100);
            }
            return originalPrice;
        }

        // === Sản phẩm & giỏ hàng ===

        function selectProduct(productId, productName, price, discount = 0, promotionId = null) {
            const originalPrice = parseFloat(price);
            const discountPercent = parseFloat(discount);
            const discountedPrice = calculateDiscountedPrice(originalPrice, discountPercent);

            selectedProduct = {
                id: productId,
                name: productName,
                originalPrice: originalPrice,
                discountPercent: discountPercent,
                price: discountedPrice,
                promotionId: promotionId
            };

            // Lấy chi tiết sản phẩm từ productsData
            const product = productsData.find(p => p.productID === productId);
            if (product) {
                productSizes = product.productSizes || [];
                selectedProduct.image = product.image;
                selectedProduct.barcode = product.barcode;
            } else {
                productSizes = [];
            }

            if (productSizes.length > 0) {
                showProductModal();
            } else {
                alert('Sản phẩm này hiện đang hết hàng hoặc chưa có size!');
            }
        }

        function showProductModal() {
            if (!selectedProduct) return;

            // Hình ảnh
            $('#modalProductImage').attr('src', selectedProduct.image || '/images/no-image.png');
            // Tên sản phẩm
            $('#modalProductName').text(selectedProduct.name);
            // Thương hiệu
            $('#modalProductBrand').text('Nike');

            // Giá & khuyến mãi
            if (selectedProduct.discountPercent > 0) {
                $('#modalPrice').text(selectedProduct.price.toLocaleString() + ' VND').removeClass('text-success').addClass('text-danger');
                $('#modalOriginalPrice').text(selectedProduct.originalPrice.toLocaleString() + ' VND').show();
                $('#modalDiscountBadge').text(`-${selectedProduct.discountPercent}% OFF`).show();
            } else {
                $('#modalPrice').text(selectedProduct.price.toLocaleString() + ' VND').removeClass('text-danger').addClass('text-success');
                $('#modalOriginalPrice').hide();
                $('#modalDiscountBadge').hide();
            }

            // Size dropdown
            let sizeOptionsHtml = '';
            productSizes.forEach(function (size) {
                if (size.quantity > 0) {
                    sizeOptionsHtml += `<option value="${size.size}" data-quantity="${size.quantity}">${size.size}</option>`;
                }
            });
            $('#modalSizeSelect').html(sizeOptionsHtml);

            // Chọn stock đầu tiên
            const firstSize = productSizes.find(s => s.quantity > 0);
            if (firstSize) {
                $('#modalStock').text(firstSize.quantity);
                currentSelectedSize = firstSize.size;
            }

            // Reset SL, note
            $('#modalQuantityInput').val(1);
            $('#modalNote').val('');

            $('#productModal').modal('show');
        }

        $('#modalSizeSelect').on('change', function () {
            const selectedSize = $(this).val();
            const sizeData = productSizes.find(s => s.size === selectedSize);
            if (sizeData) {
                $('#modalStock').text(sizeData.quantity);
                currentSelectedSize = selectedSize;
                const currentQuantity = parseInt($('#modalQuantityInput').val());
                if (currentQuantity > sizeData.quantity) {
                    $('#modalQuantityInput').val(sizeData.quantity);
                }
            }
        });

        function changeQuantity(change) {
            const currentQuantity = parseInt($('#modalQuantityInput').val()) || 1;
            const newQuantity = currentQuantity + change;
            const currentStock = parseInt($('#modalStock').text());
            if (newQuantity >= 1 && newQuantity <= currentStock) {
                $('#modalQuantityInput').val(newQuantity);
            }
        }

        function addToCartFromModal() {
            if (!selectedProduct || !currentSelectedSize) {
                alert('Vui lòng chọn size!');
                return;
            }

            const quantity = parseInt($('#modalQuantityInput').val()) || 1;
            const note = $('#modalNote').val();

            const existingItemIndex = cart.findIndex(item =>
                item.productId === selectedProduct.id && item.size === currentSelectedSize
            );

            if (existingItemIndex >= 0) {
                cart[existingItemIndex].quantity += quantity;
                if (note) cart[existingItemIndex].note = note;
            } else {
                cart.push({
                    productId: selectedProduct.id,
                    productName: selectedProduct.name,
                    size: currentSelectedSize,
                    originalPrice: selectedProduct.originalPrice,
                    unitPrice: selectedProduct.price,
                    discountPercent: selectedProduct.discountPercent,
                    quantity: quantity,
                    note: note,
                    promotionId: selectedProduct.promotionId
                });
            }

            updateCartDisplay();
            $('#productModal').modal('hide');
            selectedProduct = null;
            currentSelectedSize = null;
        }

        function updateCartDisplay() {
            let cartHtml = '';
            let total = 0;
            let originalTotal = 0;
            let totalDiscount = 0;

            cart.forEach(function (item, index) {
                const subtotal = item.unitPrice * item.quantity;
                const originalSubtotal = item.originalPrice * item.quantity;
                const itemDiscount = originalSubtotal - subtotal;

                total += subtotal;
                originalTotal += originalSubtotal;
                totalDiscount += itemDiscount;

                cartHtml += `
                    <div class="cart-item mb-2 p-2 border rounded">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h6 class="mb-1">${item.productName}</h6>
                                <small class="text-muted">Size: ${item.size}</small><br>
                                ${item.note ? `<small class="text-info">Note: ${item.note}</small><br>` : ''}
                                ${item.discountPercent > 0 ?
                        `<small class="text-success">Giảm ${item.discountPercent}%</small><br>
                            <small class="text-muted"><del>${item.originalPrice.toLocaleString()} VND</del></small><br>
                            <small class="text-danger">${item.unitPrice.toLocaleString()} × ${item.quantity} = ${subtotal.toLocaleString()} VND</small>` :
                        `<small>${item.unitPrice.toLocaleString()} × ${item.quantity} = ${subtotal.toLocaleString()} VND</small>`
                    }
                            </div>
                            <div>
                                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="updateQuantity(${index}, -1)">-</button>
                                <span class="mx-2">${item.quantity}</span>
                                <button type="button" class="btn btn-sm btn-outline-secondary" onclick="updateQuantity(${index}, 1)">+</button>
                                <button type="button" class="btn btn-sm btn-outline-danger ms-2" onclick="removeFromCart(${index})">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                        <input type="hidden" name="OrderItems[${index}].ProductID" value="${item.productId}">
                        <input type="hidden" name="OrderItems[${index}].ProductName" value="${item.productName}">
                        <input type="hidden" name="OrderItems[${index}].Size" value="${item.size}">
                        <input type="hidden" name="OrderItems[${index}].UnitPrice" value="${item.unitPrice}">
                        <input type="hidden" name="OrderItems[${index}].Quantity" value="${item.quantity}">
                    </div>
                `;
            });

            $('#cartItems').html(cartHtml);
            $('#originalTotalAmount').text(originalTotal.toLocaleString() + ' VND');
            $('#totalDiscount').text(totalDiscount.toLocaleString() + ' VND');
            $('#totalAmount').text(total.toLocaleString() + ' VND');
            $('#totalAmountInput').val(total);
            $('#submitOrder').prop('disabled', cart.length === 0);
            updateChangeAmount();
        }

        function updateQuantity(index, change) {
            cart[index].quantity += change;
            if (cart[index].quantity <= 0) {
                cart.splice(index, 1);
            }
            updateCartDisplay();
        }

        function removeFromCart(index) {
            cart.splice(index, 1);
            updateCartDisplay();
        }

        function clearCart() {
            cart = [];
            updateCartDisplay();
        }

        // === Init document ===
        $(document).ready(function () {
            // ...
        });
    </script>

}
