@using POS_Shoes.Models
@model List<ReturnReceipt>
@{
    ViewData["Title"] = "Quản lý phiếu trả hàng";
    Layout = "~/Areas/Saler/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <!-- Header & Actions -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h4><i class="fas fa-undo"></i> Quản lý phiếu trả hàng</h4>
                <p class="text-muted">Danh sách các phiếu trả hàng đã tạo</p>
            </div>
            <div>
                <a href="@Url.Action("SelectOrder")" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Tạo phiếu trả mới
                </a>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Tổng phiếu trả</h6>
                                <h3>@Model.Count</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-file-alt fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Đang xử lý</h6>
                                <h3>@Model.Count(r => r.Status == "Progressing")</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-clock fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Đã hoàn thành</h6>
                                <h3>@Model.Count(r => r.Status == "Completed")</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-check-circle fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h6 class="card-title">Tổng hoàn tiền</h6>
                                <h3>@Model.Sum(r => r.TotalRefundAmount).ToString("N0")</h3>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-money-bill-wave fa-2x"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filters & Search -->
        <div class="card mb-4">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-4">
                        <input type="text" id="searchInput" class="form-control"
                            placeholder="Tìm kiếm theo mã phiếu, khách hàng...">
                    </div>
                    <div class="col-md-3">
                        <select id="statusFilter" class="form-select">
                            <option value="">Tất cả trạng thái</option>
                            <option value="Progressing">Đang xử lý</option>
                            <option value="Completed">Đã hoàn thành</option>
                            <option value="Cancelled">Đã hủy</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <input type="date" id="dateFilter" class="form-control">
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                            <i class="fas fa-times"></i> Xóa bộ lọc
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Return Receipts Table -->
        <div class="card">
            <div class="card-header">
                <h6><i class="fas fa-table"></i> Danh sách phiếu trả hàng</h6>
            </div>
            <div class="card-body">
                @if (Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="returnReceiptsTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Mã phiếu trả</th>
                                    <th>Ngày tạo</th>
                                    <th>Đơn hàng gốc</th>
                                    <th>Khách hàng</th>
                                    <th>Trạng thái</th>
                                    <th>Số sản phẩm</th>
                                    <th>Tổng hoàn tiền</th>
                                    <th>Lý do</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var returnReceipt in Model)
                                {
                                    <tr>
                                        <td>
                                            <strong class="text-primary">
                                                #@returnReceipt.ReturnReceiptID.ToString().Substring(0, 8).ToUpper()
                                            </strong>
                                        </td>
                                        <td>
                                            @returnReceipt.Date.ToString("dd/MM/yyyy")
                                            <br>
                                            <small class="text-muted">@returnReceipt.Date.ToString("HH:mm")</small>
                                        </td>
                                        <td>
                                            <strong class="text-info">
                                                #@returnReceipt.Order.OrderID.ToString().Substring(0, 8).ToUpper()
                                            </strong>
                                            <br>
                                            <small
                                                class="text-muted">@returnReceipt.Order.OrderDate.ToString("dd/MM/yyyy")</small>
                                        </td>
                                        <td>
                                            @if (returnReceipt.Order.Customer != null)
                                            {
                                                <div>
                                                    <strong>@returnReceipt.Order.Customer.Name</strong>
                                                    <br>
                                                    <small class="text-muted">@returnReceipt.Order.Customer.Phone</small>
                                                </div>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Khách lẻ</span>
                                            }
                                        </td>
                                        <td>
                                            @if (returnReceipt.Status == "Progressing")
                                            {
                                                <span class="badge bg-warning">Đang xử lý</span>
                                            }
                                            else if (returnReceipt.Status == "Completed")
                                            {
                                                <span class="badge bg-success">Đã hoàn thành</span>
                                            }
                                            else if (returnReceipt.Status == "Cancelled")
                                            {
                                                <span class="badge bg-danger">Đã hủy</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">@returnReceipt.Status</span>
                                            }
                                    </td>
                                    <td>
                                        <span class="badge bg-info">
                                            @returnReceipt.ReturnReceiptDetails.Sum(d => d.Quantity)
                                        </span>
                                        <br>
                                        <small class="text-muted">
                                            @returnReceipt.ReturnReceiptDetails.Count() loại
                                        </small>
                                    </td>
                                    <td>
                                        <strong class="text-success">
                                            @returnReceipt.TotalRefundAmount.ToString("N0") VND
                                        </strong>
                                    </td>
                                    <td>
                                        <span class="text-truncate" style="max-width: 150px;" title="@returnReceipt.Reason">
                                            @(returnReceipt.Reason.Length > 30 ?
                                                                                    returnReceipt.Reason.Substring(0, 30) + "..." :
                                                                                    returnReceipt.Reason)
                                            </span>
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm" role="group">
                                                <a href="@Url.Action("Details", new { id = returnReceipt.ReturnReceiptID })"
                                                    class="btn btn-outline-primary" title="Xem chi tiết">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                @if (returnReceipt.Status == "Progressing")
                                                {
                                                    <button type="button" class="btn btn-outline-success"
                                                        onclick="updateStatus('@returnReceipt.ReturnReceiptID', 'Completed')"
                                                        title="Hoàn thành">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                    <button type="button" class="btn btn-outline-danger"
                                                        onclick="updateStatus('@returnReceipt.ReturnReceiptID', 'Cancelled')"
                                                        title="Hủy">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-file-alt fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">Chưa có phiếu trả hàng nào</h5>
                        <p class="text-muted">Hãy tạo phiếu trả hàng đầu tiên của bạn</p>
                        <a href="@Url.Action("SelectOrder")" class="btn btn-primary">
                            <i class="fas fa-plus"></i> Tạo phiếu trả mới
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Status Update Modal -->
<div class="modal fade" id="statusUpdateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Cập nhật trạng thái</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn cập nhật trạng thái phiếu trả này?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="confirmStatusUpdate">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentReturnReceiptId = null;
        let currentStatus = null;

        $(document).ready(function () {
            // Initialize table filtering
            initializeFilters();

            // Show success message if exists
            @if (TempData["SuccessMessage"] != null)
                {
                    <text>
                        toastr.success('@TempData["SuccessMessage"]');
                    </text>
            }
            });

        function initializeFilters() {
            // Search functionality
            $('#searchInput').on('input', function () {
                filterTable();
            });

            // Status filter
            $('#statusFilter').on('change', function () {
                filterTable();
            });

            // Date filter
            $('#dateFilter').on('change', function () {
                filterTable();
            });
        }

        function filterTable() {
            const searchTerm = $('#searchInput').val().toLowerCase();
            const statusFilter = $('#statusFilter').val();
            const dateFilter = $('#dateFilter').val();

            $('#returnReceiptsTable tbody tr').each(function () {
                const row = $(this);
                let showRow = true;

                // Search filter
                if (searchTerm) {
                    const text = row.text().toLowerCase();
                    if (!text.includes(searchTerm)) {
                        showRow = false;
                    }
                }

                // Status filter
                if (statusFilter && showRow) {
                    const statusBadge = row.find('.badge').first();
                    let rowStatus = '';

                    if (statusBadge.hasClass('bg-warning')) rowStatus = 'Progressing';
                    else if (statusBadge.hasClass('bg-success')) rowStatus = 'Completed';
                    else if (statusBadge.hasClass('bg-danger')) rowStatus = 'Cancelled';

                    if (rowStatus !== statusFilter) {
                        showRow = false;
                    }
                }

                // Date filter
                if (dateFilter && showRow) {
                    const dateCell = row.find('td:nth-child(2)').text();
                    const rowDate = dateCell.split(' ')[0]; // Get date part
                    const filterDate = new Date(dateFilter).toLocaleDateString('vi-VN');

                    if (rowDate !== filterDate) {
                        showRow = false;
                    }
                }

                row.toggle(showRow);
            });
        }

        function clearFilters() {
            $('#searchInput').val('');
            $('#statusFilter').val('');
            $('#dateFilter').val('');
            filterTable();
        }

        function updateStatus(returnReceiptId, newStatus) {
            currentReturnReceiptId = returnReceiptId;
            currentStatus = newStatus;

            const statusText = newStatus === 'Completed' ? 'hoàn thành' : 'hủy';
            $('#statusUpdateModal .modal-body p').text(`Bạn có chắc chắn muốn ${statusText} phiếu trả này?`);

            $('#statusUpdateModal').modal('show');
        }

        $('#confirmStatusUpdate').click(function () {
            if (currentReturnReceiptId && currentStatus) {
                // Here you would make an AJAX call to update the status
                $.post('@Url.Action("UpdateStatus")', {
                    id: currentReturnReceiptId,
                    status: currentStatus,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                    .done(function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            toastr.error('Có lỗi xảy ra khi cập nhật trạng thái');
                        }
                    })
                    .fail(function () {
                        toastr.error('Có lỗi xảy ra khi cập nhật trạng thái');
                    });
            }

            $('#statusUpdateModal').modal('hide');
        });

        // Auto refresh every 30 seconds
        setInterval(function () {
            if (document.visibilityState === 'visible') {
                location.reload();
            }
        }, 30000);
    </script>
}

<style>
    .table th {
        border-top: none;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .table td {
        vertical-align: middle;
        font-size: 0.9rem;
    }

    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: 1px solid rgba(0, 0, 0, 0.125);
    }

    .badge {
        font-size: 0.75rem;
    }

    .btn-group-sm>.btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    .text-truncate {
        display: inline-block;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .table-responsive {
        border-radius: 0.375rem;
    }
</style>
