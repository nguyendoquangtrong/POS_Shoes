@using POS_Shoes.Models.Entities
@model IEnumerable<Promotion>
@{
    ViewData["Title"] = "Duyệt khuyến mãi";
    Layout = "~/Areas/Master/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2><i class="fas fa-tags"></i> Quản lý duyệt khuyến mãi</h2>
            <div class="d-flex gap-2"> 
                <select id="statusFilter" class="form-select" onchange="filterByStatus()">
    <option value="">Tất cả trạng thái</option>
    <option value="Pending" selected="@(ViewBag.SelectedStatus == "Pending")">Chờ duyệt</option>
    <option value="Approved" selected="@(ViewBag.SelectedStatus == "Approved")">Đã duyệt</option>
    <option value="Rejected" selected="@(ViewBag.SelectedStatus == "Rejected")">Bị từ chối</option>
    <option value="Expired" selected="@(ViewBag.SelectedStatus == "Expired")">Đã hết hạn</option>
</select>
                                                                                                               

                @if (ViewBag.PendingCount > 0)
                {
                    <span class="badge bg-warning fs-6">@ViewBag.PendingCount chờ duyệt</span>
                }
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card stats-card border-start border-warning border-4">
                    <div class="card-body">
                        <div class="d-flex">
                            <div class="flex-grow-1">
                                <h4 class="text-warning">@Model.Count(p => p.Status == "Pending")</h4>
                                <p class="text-muted mb-0">Chờ duyệt</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-clock fa-2x text-warning"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card stats-card border-start border-success border-4">
                    <div class="card-body">
                        <div class="d-flex">
                            <div class="flex-grow-1">
                                <h4 class="text-success">@Model.Count(p => p.Status == "Approved")</h4>
                                <p class="text-muted mb-0">Đã duyệt</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-check-circle fa-2x text-success"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card stats-card border-start border-danger border-4">
                    <div class="card-body">
                        <div class="d-flex">
                            <div class="flex-grow-1">
                                <h4 class="text-danger">@Model.Count(p => p.Status == "Rejected")</h4>
                                <p class="text-muted mb-0">Bị từ chối</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-times-circle fa-2x text-danger"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card stats-card border-start border-secondary border-4">
                    <div class="card-body">
                        <div class="d-flex">
                            <div class="flex-grow-1">
                                <h4 class="text-secondary">@Model.Count(p => p.Status == "Expired")</h4>
                                <p class="text-muted mb-0">Đã hết hạn</p>
                            </div>
                            <div class="align-self-center">
                                <i class="fas fa-calendar-times fa-2x text-secondary"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.Any())
        {
            <!-- Promotions Table -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">Danh sách khuyến mãi (@ViewBag.TotalPromotions)</h6>
                    @if (Model.Any(p => p.Status == "Pending"))
                    {
                        <button type="button" class="btn btn-success" onclick="showBulkApproval()">
                            <i class="fas fa-check-double"></i> Duyệt hàng loạt
                        </button>
                    }
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    @if (Model.Any(p => p.Status == "Pending"))
                                    {
                                        <th width="30px">
                                            <input type="checkbox" id="selectAll" onchange="toggleSelectAll()">
                                        </th>
                                    }
                                    <th>Tên khuyến mãi</th>
                                    <th>Giá trị giảm</th>
                                    <th>Thời gian áp dụng</th>
                                    <th>Trạng thái</th>
                                    <th>Ngày tạo</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var promotion in Model)
                                {
                                    <tr id="row-@promotion.PromotionID">
                                        @if (Model.Any(p => p.Status == "Pending"))
                                        {
                                            <td>
                                                @if (promotion.Status == "Pending")
                                                {
                                                    <input type="checkbox" class="promotion-checkbox" value="@promotion.PromotionID">
                                                }
                                            </td>
                                        }
                                        <td>
                                            <div>
                                                <strong>@promotion.Name</strong><br>
                                                <small class="text-muted">@promotion.PromotionID.ToString().Substring(0, 8).ToUpper()</small>
                                            </div>
                                        </td>
                                        <td>
                                            <span class="badge bg-primary fs-6">@promotion.discount%</span>
                                        </td>
                                        <td>
                                            <div>
                                                <small class="text-muted">Từ:</small> @promotion.StartDate.ToString("dd/MM/yyyy")<br>
                                                <small class="text-muted">Đến:</small> @promotion.EndDate.ToString("dd/MM/yyyy")
                                                @if (promotion.EndDate <= DateTime.Now)
                                                {
                                                    <br><small class="text-danger"><i class="fas fa-exclamation-triangle"></i> Đã hết hạn</small>
                                                }
                                                else if ((promotion.EndDate - DateTime.Now).TotalDays <= 7)
                                                {
                                                    <br><small class="text-warning"><i class="fas fa-clock"></i> Sắp hết hạn</small>
                                                }
                                            </div>
                                        </td>
                                        <td>
                                            <!-- ✅ CẬP NHẬT HIỂN THỊ TRẠNG THÁI -->
                                            <span class="status-badge" id="status-@promotion.PromotionID">
                                                @switch (promotion.Status)
                                                {
                                                    case "Pending":
                                                        <span class="badge bg-warning">Chờ duyệt</span>
                                                        break;
                                                    case "Approved":
                                                        @if (promotion.IsActive && promotion.EndDate > DateTime.Now)
                                                        {
                                                            <span class="badge bg-success">Đã duyệt</span>
                                                        }
                                                        else
                                                        {
                                                            <span class="badge bg-secondary">Đã duyệt (Không hoạt động)</span>
                                                        }
                                                        break;
                                                    case "Rejected":
                                                        <span class="badge bg-danger">Bị từ chối</span>
                                                        break;
                                                    case "Expired":
                                                        <span class="badge bg-dark">Đã hết hạn</span>
                                                        break;
                                                    default:
                                                        <span class="badge bg-secondary">@promotion.Status</span>
                                                        break;
                                                }
                                            </span>
                                        </td>
                                        <td>
                                            @promotion.CreatedAt.ToString("dd/MM/yyyy HH:mm")
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm" id="actions-@promotion.PromotionID">
                                                <a href="/Master/PromotionApproval/Details/@promotion.PromotionID"
                                                   class="btn btn-outline-primary" title="Xem chi tiết">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                
                                                @if (promotion.Status == "Pending")
                                                {
                                                    @if (promotion.EndDate > DateTime.Now)
                                                    {
                                                        <button class="btn btn-success btn-sm approve-btn"
                                                                onclick="quickApprove('@promotion.PromotionID')" 
                                                                title="Duyệt ngay">
                                                            <i class="fas fa-check"></i> Duyệt
                                                        </button>
                                                        <button class="btn btn-outline-danger btn-sm reject-btn"
                                                                onclick="quickReject('@promotion.PromotionID')" 
                                                                title="Từ chối">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <button class="btn btn-outline-secondary btn-sm" disabled title="Đã hết hạn">
                                                            <i class="fas fa-ban"></i> Hết hạn
                                                        </button>
                                                    }
                                                }
                                                @if (promotion.Status == "Approved" && promotion.IsActive && promotion.EndDate > DateTime.Now)
                                                {
                                                    <button class="btn btn-outline-warning btn-sm"
                                                            onclick="expirePromotion('@promotion.PromotionID')" 
                                                            title="Đánh dấu hết hạn">
                                                        <i class="fas fa-clock"></i> Hết hạn
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-tags fa-4x text-muted mb-3"></i>
                <h5 class="text-muted">Không có khuyến mãi nào</h5>
                <p class="text-muted">Chưa có khuyến mãi nào được tạo trong hệ thống</p>
            </div>
        }
    </div>
</div>

<!-- Quick Approve Modal -->
<div class="modal fade" id="quickApproveModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Duyệt khuyến mãi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn duyệt khuyến mãi này không?</p>
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> 
                    Khuyến mãi sẽ được kích hoạt ngay lập tức sau khi duyệt.
                </div>
                <form id="approveForm">
                    <input type="hidden" id="approvePromotionId" name="id">
                    <div class="mb-3">
                        <label class="form-label">Ghi chú duyệt (tùy chọn):</label>
                        <textarea name="approvalNote" class="form-control" rows="3" 
                                  placeholder="Nhập ghi chú duyệt..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" onclick="confirmApprove()">
                    <i class="fas fa-check"></i> Xác nhận duyệt
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Bulk Approval Modal -->
<div class="modal fade" id="bulkApprovalModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Duyệt hàng loạt</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc muốn duyệt tất cả khuyến mãi đã chọn?</p>
                <div id="selectedPromotions"></div>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    Chỉ những khuyến mãi chưa hết hạn mới được duyệt.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" onclick="confirmBulkApproval()">
                    <i class="fas fa-check-double"></i> Duyệt hàng loạt
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Quick Reject Modal -->
<div class="modal fade" id="quickRejectModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Từ chối khuyến mãi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="rejectForm">
                    <input type="hidden" id="rejectPromotionId" name="id">
                    <div class="mb-3">
                        <label class="form-label">Lý do từ chối <span class="text-danger">*</span>:</label>
                        <textarea name="rejectionReason" class="form-control" rows="3" 
                                  placeholder="Nhập lý do từ chối..." required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" onclick="confirmReject()">
                    <i class="fas fa-times"></i> Từ chối
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .stats-card {
        transition: transform 0.2s;
        border-radius: 10px;
    }
    
    .stats-card:hover {
        transform: translateY(-5px);
    }

    .table th {
        border-top: none;
        font-weight: 600;
    }

    .badge {
        font-size: 0.75em;
    }

    .btn-group-sm .btn {
        margin: 0 1px;
    }

    .loading {
        opacity: 0.6;
        pointer-events: none;
    }
</style>

@section Scripts {
    <script>
        function filterByStatus() {
            const status = document.getElementById('statusFilter').value;
            window.location.href = `/Master/PromotionApproval?status=${status}`;
        }

        // ✅ CẬP NHẬT QUICK APPROVE VỚI REAL-TIME UPDATE
        function quickApprove(promotionId) {
            $('#approvePromotionId').val(promotionId);
            $('#quickApproveModal').modal('show');
        }

        function confirmApprove() {
            const promotionId = $('#approvePromotionId').val();
            const approvalNote = $('#approveForm textarea[name="approvalNote"]').val();
            
            // Show loading state
            const row = $(`#row-${promotionId}`);
            row.addClass('loading');

            $.post('/Master/PromotionApproval/Approve', {
                id: promotionId,
                approvalNote: approvalNote,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
            .done(function(response) {
                $('#quickApproveModal').modal('hide');
                
                if (response.success) {
                    // ✅ CẬP NHẬT REAL-TIME STATUS
                    updateRowStatus(promotionId, 'Approved', true);
                    toastr.success(response.message);
                } else {
                    toastr.error(response.message);
                }
            })
            .fail(function() {
                toastr.error('Có lỗi xảy ra khi duyệt khuyến mãi');
            })
            .always(function() {
                row.removeClass('loading');
            });
        }

        function quickReject(promotionId) {
            $('#rejectPromotionId').val(promotionId);
            $('#quickRejectModal').modal('show');
        }

        function confirmReject() {
            const rejectionReason = $('#rejectForm textarea[name="rejectionReason"]').val();
            if (!rejectionReason.trim()) {
                toastr.error('Vui lòng nhập lý do từ chối!');
                return;
            }

            const promotionId = $('#rejectPromotionId').val();
            const row = $(`#row-${promotionId}`);
            row.addClass('loading');

            $.post('/Master/PromotionApproval/Reject', {
                id: promotionId,
                rejectionReason: rejectionReason,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
            .done(function(response) {
                $('#quickRejectModal').modal('hide');
                
                if (response.success) {
                    // ✅ CẬP NHẬT REAL-TIME STATUS
                    updateRowStatus(promotionId, 'Rejected', false);
                    toastr.success(response.message);
                } else {
                    toastr.error(response.message);
                }
            })
            .fail(function() {
                toastr.error('Có lỗi xảy ra khi từ chối khuyến mãi');
            })
            .always(function() {
                row.removeClass('loading');
            });
        }

        function expirePromotion(promotionId) {
            if (confirm('Đánh dấu khuyến mãi này đã hết hạn?')) {
                const row = $(`#row-${promotionId}`);
                row.addClass('loading');

                $.post('/Master/PromotionApproval/Expire', {
                    id: promotionId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                .done(function(response) {
                    if (response.success) {
                        // ✅ CẬP NHẬT REAL-TIME STATUS
                        updateRowStatus(promotionId, 'Expired', false);
                        toastr.success(response.message);
                    } else {
                        toastr.error(response.message);
                    }
                })
                .fail(function() {
                    toastr.error('Có lỗi xảy ra');
                })
                .always(function() {
                    row.removeClass('loading');
                });
            }
        }

        // ✅ FUNCTION CẬP NHẬT TRẠNG THÁI REAL-TIME
        function updateRowStatus(promotionId, newStatus, isActive) {
            const statusBadge = $(`#status-${promotionId}`);
            const actionButtons = $(`#actions-${promotionId}`);
            
            // Cập nhật badge trạng thái
            let badgeHtml = '';
            switch (newStatus) {
                case 'Approved':
                    badgeHtml = '<span class="badge bg-success">Đã duyệt</span>';
                    break;
                case 'Rejected':
                    badgeHtml = '<span class="badge bg-danger">Bị từ chối</span>';
                    break;
                case 'Expired':
                    badgeHtml = '<span class="badge bg-dark">Đã hết hạn</span>';
                    break;
            }
            statusBadge.html(badgeHtml);
            
            // Cập nhật action buttons
            if (newStatus === 'Approved' && isActive) {
                actionButtons.html(`
                    <a href="/Master/PromotionApproval/Details/${promotionId}" class="btn btn-outline-primary" title="Xem chi tiết">
                        <i class="fas fa-eye"></i>
                    </a>
                    <button class="btn btn-outline-warning btn-sm" onclick="expirePromotion('${promotionId}')" title="Đánh dấu hết hạn">
                        <i class="fas fa-clock"></i> Hết hạn
                    </button>
                `);
            } else if (newStatus === 'Rejected' || newStatus === 'Expired') {
                actionButtons.html(`
                    <a href="/Master/PromotionApproval/Details/${promotionId}" class="btn btn-outline-primary" title="Xem chi tiết">
                        <i class="fas fa-eye"></i>
                    </a>
                `);
            }
        }

        function toggleSelectAll() {
            const selectAllCheckbox = document.getElementById('selectAll');
            const promotionCheckboxes = document.querySelectorAll('.promotion-checkbox');
            
            promotionCheckboxes.forEach(checkbox => {
                checkbox.checked = selectAllCheckbox.checked;
            });
        }

        function showBulkApproval() {
            const selectedCheckboxes = document.querySelectorAll('.promotion-checkbox:checked');
            
            if (selectedCheckboxes.length === 0) {
                toastr.warning('Vui lòng chọn ít nhất một khuyến mãi để duyệt!');
                return;
            }

            $('#selectedPromotions').html(`<p>Đã chọn <strong>${selectedCheckboxes.length}</strong> khuyến mãi để duyệt.</p>`);
            $('#bulkApprovalModal').modal('show');
        }

        function confirmBulkApproval() {
            const selectedCheckboxes = document.querySelectorAll('.promotion-checkbox:checked');
            const promotionIds = Array.from(selectedCheckboxes).map(cb => cb.value);

            $.post('/Master/PromotionApproval/ApproveMultiple', {
                promotionIds: promotionIds,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
            .done(function(response) {
                $('#bulkApprovalModal').modal('hide');
                
                if (response.success) {
                    toastr.success(response.message);
                    // Reload page to show updated statuses
                    setTimeout(() => location.reload(), 1500);
                } else {
                    toastr.error(response.message);
                }
            })
            .fail(function() {
                toastr.error('Có lỗi xảy ra khi duyệt hàng loạt');
            });
        }

        // Add CSRF token to all AJAX requests
        $.ajaxSetup({
            beforeSend: function(xhr, settings) {
                if (!/^(GET|HEAD|OPTIONS|TRACE)$/i.test(settings.type) && !this.crossDomain) {
                    xhr.setRequestHeader("RequestVerificationToken", $('input[name="__RequestVerificationToken"]').val());
                }
            }
        });

        // Show success/error messages
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
            toastr.success('@TempData["SuccessMessage"]');
            </text>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <text>
            toastr.error('@TempData["ErrorMessage"]');
            </text>
        }
    </script>
}
